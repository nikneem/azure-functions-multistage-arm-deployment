trigger:
- master

variables:
  - group: prod-variables
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-2019'
    steps:
    - task: CopyFiles@2
      displayName: 'Publish ARM templates'
      inputs:
        SourceFolder: 'MyDemo.Deployments'
        Contents: '**\*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)\deployments'

    - task: DotNetCoreCLI@2
      displayName: 'Build Functions APP'
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)/MyDemo.Functions/*.csproj'
        arguments: --output $(System.DefaultWorkingDirectory)\publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)\publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)\$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)\deployments'
      artifact: deployments

    - publish: '$(Build.ArtifactStagingDirectory)\$(Build.BuildId).zip'
      artifact: drop


- stage: Deploy
  displayName: Deploy stage

  jobs:
  - job: VariablesTest
    displayName: 'Show Variable Values'
    steps:
      - script: |
          echo '${{ variables.SERVICECONNECTION }}'



  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-2019'

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'AzureDeployment'
              subscriptionId: 'd8edfd3f-489d-4db6-b048-9f6647b7b8fe'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '${{ variables.RESOURCEGROUP }}'
              location: $RESOURCELOCATION
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)\deployments\azuredeploy.json'
              csmParametersFile: '$(Pipeline.Workspace)\deployments\azuredeploy.parameters.json'
              deploymentMode: 'Complete'     

          - task: AzureFunctionApp@1
            displayName: 'Deploy Functions APP'
            inputs:
              azureSubscription: 'AzureDeployment'
              appType: functionApp
              appName: $functionAppName
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
